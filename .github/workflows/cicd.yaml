name: CI/CD
on: [push]

jobs:
  backend-CI:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb
        env:
        #  MARIADB_DATABASE_HOST: ${HOST}
          MARIADB_DATABASE: test_db
          MARIADB_USER: test_user
          MARIADB_PASSWORD: test_password
          MARIADB_ROOT_PASSWORD: test_password
        ports:
          - 3306:3306
        volumes:
          - ${{ github.action_path }}/backend/database:/docker-entrypoint-initdb.d/
        # options: >-
        #   --health-cmd pg_isready
        #   --health-interval 10s
        #   --health-timeout 5s
        #   --health-retries 5

    steps:
      - name: 체크아웃
        uses: actions/checkout@v2
      - name: DB에 샘플 데이터 삽입
        uses: calxus/mysql-deploy-action@v2
        with:
          DATABASE_HOST: localhost
          DATABASE_PORT: 3306
          DATABASE_NAME: test_db
          DATABASE_USERNAME: test_user
          DATABASE_PASSWORD: test_password
          DATABASE_SCRIPT: ${{ github.action_path }}/backend/database/42cabi_v3_test.sql
      - name: Node.js 16.x Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: 종속 모듈들 캐싱
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/backend/node_modules
          key: npm-packages-${{ hashFiles('**/backend/package-lock.json') }}
        id: cache
      - name: 종속 모듈들 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --prefix backend
      - name: lint 체크
        run: npm run lint --prefix backend
      - name: 빌드 체크
        run: npm run build --prefix backend
      # - name: 단위 테스트 체크
      #   run: npm run test --prefix backend
      - name: 통합 테스트 체크
        env:
          HOST: localhost
          DB_USER: test_user
          DB_PORT: 3306
          DATABASE: test_db
          DB_PASSWORD: test_password
          ROOT_PASSWORD: test_password
          FORTYTWO_APP_ID: 1234
          FORTYTWO_APP_SECRET: 1234
          CALLBACK_URL: /auth/login/callback
          COOKIE_KEY: secret
          JWT_SECRETKEY: SecretKey
          JWT_ALGORITHM: HS256
          JWT_EXPIREIN: 28d
          JWT_ISSUER: 42cabi
          MAIL_SEND: false
          DEBUG_LOG: true
        run: npm run test:e2e --prefix backend

  frontend-CI:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v2
      - name: Node.js 16.x Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: 종속 모듈들 캐싱
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/frontend_v3/node_modules
          key: npm-packages-${{ hashFiles('**/frontend_v3/package-lock.json') }}
        id: cache
      - name: 종속 모듈들 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --prefix frontend_v3
      # - name: lint 체크
      #   run: npm run lint --prefix frontend_v3
      - name: 빌드 체크
        run: npm run build --prefix frontend_v3
      # - name: 단위 테스트 체크
      #   run: npm run test --prefix frontend_v3
      # - name: 통합 테스트 체크
      #   run: npm run test:e2e --prefix frontend_v3

  CD-develop:
    name: deploy-develop
    runs-on: ubuntu-latest
    needs: [backend-CI, frontend-CI]
    if: ${{ github.ref == 'refs/heads/dev' }}
    steps:
      - name: 리모트 쉘 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY_NEW }}
          port: ${{ secrets.PORT }}
          script_stop: true
          script: |
            source $HOME/.bash_profile
            echo "해당 리포지토리로 이동"
            cd $HOME/42cabi_dev
            echo "리포지토리 pull"
            git pull origin dev
            echo "앱 빌드"
            cd $HOME/42cabi_dev/backend
            npm install
            npm run build:fe_v3
            npm run deploy:dev
            npm run invalidate:dev
            npm run build
            echo "env 파일 복사"
            cp $HOME/42cabi_dev.env $HOME/42cabi_dev/backend/.env
            echo "앱 배포 (reload)"
            pm2 reload cabi_dev

  CD-main:
    name: deploy-main
    runs-on: ubuntu-latest
    needs: [backend-CI, frontend-CI]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: 리모트 쉘 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_MAIN }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY_NEW }}
          port: ${{ secrets.PORT }}
          script_stop: true
          script: |
            source $HOME/.bash_profile
            echo "해당 리포지토리로 이동"
            cd $HOME/42cabi_main
            echo "리포지토리 pull"
            git pull origin main
            echo "앱 빌드"
            cd $HOME/42cabi_main/backend
            npm install
            npm run build:fe_v3
            npm run deploy:main
            npm run invalidate:main
            npm run build
            echo "env 파일 복사"
            cp $HOME/42cabi_main.env $HOME/42cabi_main/backend/.env
            echo "앱 배포 (reload)"
            pm2 reload cabi_main
